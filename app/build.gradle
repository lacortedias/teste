plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.teste"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable = true
            buildConfigField "String", "BASE_URL", "\"https://api.dictionaryapi.dev/\""
            buildConfigField "String", "WORD_LIST_URL", "\"https://raw.githubusercontent.com/meetDeveloper/freeDictionaryAPI/master/meta/wordList/english.txt\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled true
    }

    dataBinding {
        enabled true
    }
}

ext {
    picasso_version = "2.8"
    core_ktx_version = "1.8.0"
    fragment_ktx_version = "1.3.5"
    app_compat_version = "1.4.2"
    material_version = "1.6.1"
    junit_version = "4.13.2"
    junit_ext = "1.1.3"
    espresso_version = "3.4.0"
    coroutines_version = "1.6.4"
    data_binding_version = "3.1.4"
    gson_version = "2.8.9"
    retrofit_version = "2.9.0"
    recyclerview_version = "26.0.2"
    mockk_version = "1.12.3"
    test_arch_version = "2.1.0"
    corourines_test_version = "1.5.2"
    fragment_version = "1.5.0"
    webserver_mock_version = "4.9.0"
    room_version = "2.4.3"
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.picasso:picasso:$picasso_version"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$corourines_test_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$webserver_mock_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    kapt "com.android.databinding:compiler:$data_binding_version"

    implementation "io.mockk:mockk:$mockk_version"
    implementation "androidx.arch.core:core-testing:$test_arch_version"
    debugImplementation("androidx.fragment:fragment-testing:$fragment_version")

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    implementation 'io.insert-koin:koin-android:3.3.0'

}